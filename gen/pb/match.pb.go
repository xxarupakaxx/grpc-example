// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: pb/match.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchResponse_Status int32

const (
	MatchResponse_UNKNOWN MatchResponse_Status = 0
	MatchResponse_WAITING MatchResponse_Status = 1
	MatchResponse_MATCH   MatchResponse_Status = 2
)

// Enum value maps for MatchResponse_Status.
var (
	MatchResponse_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "WAITING",
		2: "MATCH",
	}
	MatchResponse_Status_value = map[string]int32{
		"UNKNOWN": 0,
		"WAITING": 1,
		"MATCH":   2,
	}
)

func (x MatchResponse_Status) Enum() *MatchResponse_Status {
	p := new(MatchResponse_Status)
	*p = x
	return p
}

func (x MatchResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_match_proto_enumTypes[0].Descriptor()
}

func (MatchResponse_Status) Type() protoreflect.EnumType {
	return &file_pb_match_proto_enumTypes[0]
}

func (x MatchResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchResponse_Status.Descriptor instead.
func (MatchResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_pb_match_proto_rawDescGZIP(), []int{1, 0}
}

type MatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MatchRequest) Reset() {
	*x = MatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_match_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRequest) ProtoMessage() {}

func (x *MatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_match_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRequest.ProtoReflect.Descriptor instead.
func (*MatchRequest) Descriptor() ([]byte, []int) {
	return file_pb_match_proto_rawDescGZIP(), []int{0}
}

type MatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID int32                `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Status MatchResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=example.MatchResponse_Status" json:"status,omitempty"`
	Player *Player              `protobuf:"bytes,3,opt,name=player,proto3" json:"player,omitempty"`
}

func (x *MatchResponse) Reset() {
	*x = MatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_match_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchResponse) ProtoMessage() {}

func (x *MatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_match_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchResponse.ProtoReflect.Descriptor instead.
func (*MatchResponse) Descriptor() ([]byte, []int) {
	return file_pb_match_proto_rawDescGZIP(), []int{1}
}

func (x *MatchResponse) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *MatchResponse) GetStatus() MatchResponse_Status {
	if x != nil {
		return x.Status
	}
	return MatchResponse_UNKNOWN
}

func (x *MatchResponse) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

var File_pb_match_proto protoreflect.FileDescriptor

var file_pb_match_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x62, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x0f, 0x70, 0x62, 0x2f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0e, 0x0a, 0x0c, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x0d, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x44, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x22, 0x2d, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x57,
	0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x41, 0x54, 0x43,
	0x48, 0x10, 0x02, 0x32, 0x54, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x78, 0x61, 0x72, 0x75, 0x70, 0x61, 0x6b,
	0x61, 0x78, 0x78, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_match_proto_rawDescOnce sync.Once
	file_pb_match_proto_rawDescData = file_pb_match_proto_rawDesc
)

func file_pb_match_proto_rawDescGZIP() []byte {
	file_pb_match_proto_rawDescOnce.Do(func() {
		file_pb_match_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_match_proto_rawDescData)
	})
	return file_pb_match_proto_rawDescData
}

var file_pb_match_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pb_match_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pb_match_proto_goTypes = []interface{}{
	(MatchResponse_Status)(0), // 0: example.MatchResponse.Status
	(*MatchRequest)(nil),      // 1: example.MatchRequest
	(*MatchResponse)(nil),     // 2: example.MatchResponse
	(*Player)(nil),            // 3: example.Player
}
var file_pb_match_proto_depIdxs = []int32{
	0, // 0: example.MatchResponse.status:type_name -> example.MatchResponse.Status
	3, // 1: example.MatchResponse.player:type_name -> example.Player
	1, // 2: example.MatchingService.MatchStreams:input_type -> example.MatchRequest
	2, // 3: example.MatchingService.MatchStreams:output_type -> example.MatchResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pb_match_proto_init() }
func file_pb_match_proto_init() {
	if File_pb_match_proto != nil {
		return
	}
	file_pb_player_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pb_match_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_match_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_match_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_match_proto_goTypes,
		DependencyIndexes: file_pb_match_proto_depIdxs,
		EnumInfos:         file_pb_match_proto_enumTypes,
		MessageInfos:      file_pb_match_proto_msgTypes,
	}.Build()
	File_pb_match_proto = out.File
	file_pb_match_proto_rawDesc = nil
	file_pb_match_proto_goTypes = nil
	file_pb_match_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MatchingServiceClient is the client API for MatchingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MatchingServiceClient interface {
	MatchStreams(ctx context.Context, opts ...grpc.CallOption) (MatchingService_MatchStreamsClient, error)
}

type matchingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMatchingServiceClient(cc grpc.ClientConnInterface) MatchingServiceClient {
	return &matchingServiceClient{cc}
}

func (c *matchingServiceClient) MatchStreams(ctx context.Context, opts ...grpc.CallOption) (MatchingService_MatchStreamsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MatchingService_serviceDesc.Streams[0], "/example.MatchingService/MatchStreams", opts...)
	if err != nil {
		return nil, err
	}
	x := &matchingServiceMatchStreamsClient{stream}
	return x, nil
}

type MatchingService_MatchStreamsClient interface {
	Send(*MatchRequest) error
	Recv() (*MatchResponse, error)
	grpc.ClientStream
}

type matchingServiceMatchStreamsClient struct {
	grpc.ClientStream
}

func (x *matchingServiceMatchStreamsClient) Send(m *MatchRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *matchingServiceMatchStreamsClient) Recv() (*MatchResponse, error) {
	m := new(MatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MatchingServiceServer is the server API for MatchingService service.
type MatchingServiceServer interface {
	MatchStreams(MatchingService_MatchStreamsServer) error
}

// UnimplementedMatchingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMatchingServiceServer struct {
}

func (*UnimplementedMatchingServiceServer) MatchStreams(MatchingService_MatchStreamsServer) error {
	return status.Errorf(codes.Unimplemented, "method MatchStreams not implemented")
}

func RegisterMatchingServiceServer(s *grpc.Server, srv MatchingServiceServer) {
	s.RegisterService(&_MatchingService_serviceDesc, srv)
}

func _MatchingService_MatchStreams_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MatchingServiceServer).MatchStreams(&matchingServiceMatchStreamsServer{stream})
}

type MatchingService_MatchStreamsServer interface {
	Send(*MatchResponse) error
	Recv() (*MatchRequest, error)
	grpc.ServerStream
}

type matchingServiceMatchStreamsServer struct {
	grpc.ServerStream
}

func (x *matchingServiceMatchStreamsServer) Send(m *MatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *matchingServiceMatchStreamsServer) Recv() (*MatchRequest, error) {
	m := new(MatchRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MatchingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.MatchingService",
	HandlerType: (*MatchingServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MatchStreams",
			Handler:       _MatchingService_MatchStreams_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pb/match.proto",
}
